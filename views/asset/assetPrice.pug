extends ../layouts/layout.pug

block content
  script(src='https://cdn.jsdelivr.net/npm/d3-array@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-color@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-format@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-interpolate@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-time@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-time-format@4')
  script(src='https://cdn.jsdelivr.net/npm/d3-scale@4')
  script(src='https://cdn.jsdelivr.net/npm/d3-selection@3')
  script(src='https://cdn.jsdelivr.net/npm/d3-axis@3')
  script(src='/js/timechart.min.js')
  ul.nav.nav-tabs
    li.nav-item
      a.nav-link(href='/asset/'+asset+'/premium') #{asset} Premium
    li.nav-item
      a.nav-link.active(aria-current='page') #{asset} Price
  div#chartPremium(style={
      "width": "100%",
      "height": "640px",
      "max-height": "90vh"
      })

  script(type='text/javascript').

    main();

    function main() {
        const el = document.getElementById('chartPremium');
        const chart = new TimeChart(el, {
            baseTime: !{baseTime},
            series: [{
                    name: "TerraSwap price",
                    data: !{dataColumn1},
                    lineWidth: 2,
                    color: 'DarkBlue'
                    },
                    {
                        name: "Oracle price",
                        data: !{dataColumn2},
                        lineWidth: 2,
                        color: 'DarkOrange',
                    }
                    ],
            xRange: "auto",
            // realTime: true,
            zoom: {
                x: {
                    autoRange: true,
                    minDomainExtent: 50,
                },
                y: {
                    autoRange: true,
                    minDomainExtent: 1,
                }
            },
            tooltip: true,
            tooltipXLabel: "Time"
            //, plugins: { tooltipWithDate }
            //This is something to be done - to display as a normal date/time, but not in millis
        });

        let x = !{baseTime};
    }
